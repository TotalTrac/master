SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
--region [job].[KitInsert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   dlaub using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [job].[KitInsert]
-- Date Generated: Friday, January 8, 2016
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [job].[KitInsert]
  @CompleteMailing INT,
	@Created datetime,
	@CreatedBy int,
	@Csruserid int,
	@Estimatedqty int,
	@Instructions varchar(max),
	@JobId int,
	@Dropdate date,
	@Name nvarchar(50),
	@SegmentId int,
  @StartTime DATETIME = NULL,
  @EndTime DATETIME = NULL,
	@Soduedate date

AS

SET NOCOUNT ON
DECLARE @KeyIndex TABLE (counterCol INT);
DECLARE @JobVersion timestamp;
DECLARE @string char(50) = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*-+=|.?';



UPDATE job.Jobs SET JOB_PRODUCTIONKEYINDEX = JOB_PRODUCTIONKEYINDEX + 1
OUTPUT INSERTED.JOB_PRODUCTIONKEYINDEX INTO @KeyIndex
WHERE JOB_ID = @JobId
;

declare @Counter int
select  top 1 @Counter = counterCol
from    @KeyIndex

DECLARE @FirstDigit INT =  @Counter/26
DECLARE @SecondDigit INT = @Counter - (@FirstDigit*26)
DECLARE @firstChar CHAR(1) = CHAR(ASCII(SUBSTRING(@string, @FirstDigit, 1)))
DECLARE @secondChar CHAR(1) = CHAR(ASCII(SUBSTRING(@string, @SecondDigit+1, 1)))
  DECLARE @Key varchar(2);
  IF  @FirstDigit = 0 BEGIN  
  	SET @Key = @secondChar
  END
  ELSE BEGIN  
    SET @Key = @firstChar + @secondChar
  END
       
  
INSERT INTO [job].[Kits] (
  CompleteMailing,
	Created,
	CreatedBy,
	[CsrUserId],
	[EstimatedQty],
	[Instructions],
	[JobId],
	[DropDate],
	[Name],
	[ProductionKey],
	[SegmentID],
	[SoDueDate],
  StartTime,
  EndTime
) 
OUTPUT		
		inserted.ID AS ID, inserted.Rowversion AS [VERSION]
VALUES (
  @CompleteMailing,
	@Created,
	@CreatedBy,
	@Csruserid,
	@Estimatedqty,
	@Instructions,
	@JobId,
	@Dropdate,
	@Name,
	@Key,
	@SegmentId,
	@Soduedate,
  @StartTime,
  @EndTime
)

--IF @@ROWCOUNT > 0
--BEGIN
--	SET NOCOUNT ON;
--
--    UPDATE 
--		[job].[Jobs]
--	SET
--		JOB_PRODUCTIONKEYINDEX	= @KeyIndex + 1
--
--	WHERE
--		JOB_ID = @JobId AND JOB_ROWVERSION = @JobVersion
--END
--endregion
GO